openapi: 3.0.0
info:
  version: '1.0'
  title: 'APIMUsuario'
  description: 'Esta API permite realizar el mantenimiento de los usuarios'
  termsOfService: 'https://yanacochaTermsOfService.com.pe'
  contact:
    name: 'Yanacocha TI'
    url: 'https://yanacochait.com.pe'
    
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/DXC53/APIMUsuario/1.0
    
tags:
- name: usuarios
  description: Recurso usuarios
  
paths:
  /listarUsuarios:
    post:
      tags:
        - usuarios
      requestBody:
        description: 'Obtener usuarios, mediante filtros'
        content:
          application/json:
            schema:
              properties:
                nombres:
                  type: string
                  example: "Jhensson Frank"
                apellidos:
                  type: string
                  example: "Ayma Flores"
                usuario:
                  type: string
                  example: "jhensson2000"
                estado:
                  type: integer
                  example: 1
                numero_pagina:
                  type: integer
                  example: 1
                numero_elementos:
                  type: integer
                  example: 20
  
      responses:
        200:
          description: Transacción correcta
          content:
            application/json:
              schema:
                properties:
                  result:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 200
                      description:
                        type: string
                        example: Transacción correcta
                      descriptionDetail:
                        type: string
                        example: Usuarios encontrados correctamente
                      timeStamp:
                        type: string
                        example: "2020-04-26T16:56:59.000"
                      transactionId:
                        type: string
                        example: 125312647124
                  usuario:
                    items:
                      properties:
                        nombres:
                          type: string
                          example: "Jhensson Frank"
                        apellidos:
                          type: string
                          example: "Ayma Flores"
                        usuario:
                          type: string
                          example: "jhensson2000"
                        correo:
                          type: string
                          example: "jhensson.ayma@gmail.com"
                        estado:
                          type: integer
                          example: 1
                        numero_pagina:
                          type: integer
                          example: 1
                        numero_elementos:
                          type: integer
                          example: 20
                              
        400:
          description: Request incorrecto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error400'
                        
        401:
          description: Acceso Denegado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error401'
                
        404:
          description: Recurso no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error404'
                
        500:
          description: Error interno del servidor
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error500'       
                
  /usuario:
    post:
      tags:
        - usuarios
      requestBody:
        description: 'Registrar un usuario'
        content:
          application/json:
            schema:
              properties:
                nombres:
                  type: string
                  example: "Jhensson Frank"
                apellidos:
                  type: string
                  example: "Ayma Flores"
                usuario:
                  type: string
                  example: "jhensson2000"
                correo:
                  type: string
                  example: "jhensson.ayma@gmail.com"
                contrasena:
                  type: string
                  example: "cdd4f874095045f4ae6670038cbbd05fac9d4802"
                estado:
                  type: integer
                  example: 1
                id_rol:
                  type: integer
                  example: 1
                id_empresa:
                  type: integer
                  example: 20
      
  
      responses:
        200:
          description: Transacción correcta
          content:
            application/json:
              schema:
                properties:
                  result:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 200
                      description:
                        type: string
                        example: Transacción correcta
                      descriptionDetail:
                        type: string
                        example: Usuario registrado correctamente
                      timeStamp:
                        type: string
                        example: "2020-04-26T16:56:59.000"
                      transactionId:
                        type: string
                        example: 125312647124
                              
        400:
          description: Request incorrecto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error400'
                        
        401:
          description: Acceso Denegado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error401'
                
        404:
          description: Recurso no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error404'
                
        500:
          description: Error interno del servidor
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error500'       
    
    put:
      tags:
        - usuarios
      requestBody:
        description: 'Editar un usuario'
        content:
          application/json:
            schema:
              properties:
                id:
                  type: integer
                  example: 23
                nombres:
                  type: string
                  example: "Jhensson Frank"
                apellidos:
                  type: string
                  example: "Ayma Flores"
                usuario:
                  type: string
                  example: "jhensson2000"
                correo:
                  type: string
                  example: "jhensson.ayma@gmail.com"
                contrasena:
                  type: string
                  example: "cdd4f874095045f4ae6670038cbbd05fac9d4802"
                estado:
                  type: integer
                  example: 1
                id_rol:
                  type: integer
                  example: 1
                id_empresa:
                  type: integer
                  example: 1
  
      responses:
        200:
          description: Transacción correcta
          content:
            application/json:
              schema:
                properties:
                  result:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 200
                      description:
                        type: string
                        example: Transacción correcta
                      descriptionDetail:
                        type: string
                        example: Usuario editado correctamente
                      timeStamp:
                        type: string
                        example: "2020-04-26T16:56:59.000"
                      transactionId:
                        type: string
                        example: 125312647124
                              
        400:
          description: Request incorrecto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error400'
                        
        401:
          description: Acceso Denegado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error401'
                
        404:
          description: Recurso no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error404'
                
        500:
          description: Error interno del servidor
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error500'        
                
  /usuario/validate:
    post:
      tags:
        - usuarios
      requestBody:
        description: 'Validar si un usuario existe en base de datos, a través de los campos usuario y password:'
        content:
          application/json:
            schema:
              properties:
                usuario:
                  type: string
                  example: "jhensson2000"
                contrasena:
                  type: string
                  example: "cdd4f874095045f4ae6670038cbbd05fac9d4802"
  
      responses:
        200:
          description: Transacción correcta
          content:
            application/json:
              schema:
                properties:
                  result:
                    type: object
                    properties:
                      code:
                        type: integer
                        example: 200
                      description:
                        type: string
                        example: Transacción correcta
                      descriptionDetail:
                        type: string
                        example: Usuario validado correctamente
                      timeStamp:
                        type: string
                        example: "2020-04-26T16:56:59.000"
                      transactionId:
                        type: string
                        example: 125312647124
                  usuario:
                    properties:
                      nombres:
                        type: string
                        example: "Jhensson Frank"
                      apellidos:
                        type: string
                        example: "Ayma Flores"
                      usuario:
                        type: string
                        example: "jhensson2000"
                      correo:
                        type: string
                        example: "jhensson.ayma@gmail.com"
                      estado:
                        type: integer
                        example: 1
                      id_rol:
                        type: integer
                        example: 1
                      id_empresa:
                        type: integer
                        example: 1
                              
        400:
          description: Request incorrecto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error400'
                        
        401:
          description: Acceso Denegado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error401'
                
        404:
          description: Recurso no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error404'
                
        500:
          description: Error interno del servidor
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/error500'   
  
components:
  schemas:
    error400:
      properties:
        result:
          type: object
          properties:
            code:
              type: integer
              example: 400
            description:
              type: string
              example: Request incorrecto
            descriptionDetail:
              type: string
              example: Request incorrecto
            timeStamp:
              type: string
              example: "2020-04-26T16:56:59.000"
            transactionId:
              type: string
              example: 125312647124
    error401:
      properties:
        result:
          type: object
          properties:
            code:
              type: integer
              example: 401
            description:
              type: string
              example: Acceso denegado
            descriptionDetail:
              type: string
              example: Token inválido
            timeStamp:
              type: string
              example: "2020-04-26T16:56:59.000"
            transactionId:
              type: string
              example: 125312647124
    error404:
      properties:
        result:
          type: object
          properties:
            code:
              type: integer
              example: 404
            description:
              type: string
              example: Recurso no encontrado
            descriptionDetail:
              type: string
              example: Recurso no encontrado
            timeStamp:
              type: string
              example: "2020-04-26T16:56:59.000"
            transactionId:
              type: string
              example: 125312647124
    error500:
      properties:
        result:
          type: object
          properties:
            code:
              type: integer
              example: 500
            description:
              type: string
              example: Error interno en el servidor
            descriptionDetail:
              type: string
              example: Error en el procesamiento de la solicitud
            timeStamp:
              type: string
              example: "2020-04-26T16:56:59.000"
            transactionId:
              type: string
              example: 125312647124